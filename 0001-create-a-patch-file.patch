From 3778695ca891b884297f5099a266e0736c3be056 Mon Sep 17 00:00:00 2001
From: omar1024 <umarfarooqa16@gmail.com>
Date: Mon, 20 Jul 2020 22:01:05 +0530
Subject: [PATCH] create a patch file

---
 src/DataManipulator.ts | 33 +++++++++++++++++++++++----------
 src/Graph.tsx          | 17 +++++++++--------
 2 files changed, 32 insertions(+), 18 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index f6b15ff..4d8edeb 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,33 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
   timestamp: Date,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]): Row[] {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
+  static generateRow(serverResponds: ServerRespond[]): Row {
+    const priceABC = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price)/2;
+    const priceDEF = (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price)/2;
+    const ratio = priceABC / priceDEF;
+    const upper_bound = 1 + 0.07;
+    const lower_bound = 1 - 0.07;
+    return {
+      price_abc: priceABC,
+      price_def: priceDEF,
+      ratio,
+      timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ?
+                  serverResponds[0].timestamp : serverResponds[1].timestamp,
+      upper_bound: upper_bound,
+      lower_bound: lower_bound,
+      trigger_alert: (ratio > upper_bound || ratio < lower_bound ) ? ratio : undefined,
+
       };
-    })
   }
-}
+}
\ No newline at end of file
diff --git a/src/Graph.tsx b/src/Graph.tsx
index a7948fc..bba9d07 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,3 +1,4 @@
+ 
 import React, { Component } from 'react';
 import { Table } from '@jpmorganchase/perspective';
 import { ServerRespond } from './DataStreamer';
@@ -26,10 +27,10 @@ class Graph extends Component<IProps, {}> {
       price_abc: 'float',
       price_def: 'float',
       ratio: 'float',
-      timestamp: 'data',
+      timestamp: 'date',
       upper_bound: 'float',
       lower_bound: 'float',
-      trigger_alert:'float',
+      trigger_alert: 'float'
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -39,12 +40,12 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["ratio","lower_bound", "upper_bound", "trigger_alert"]');
+      elem.setAttribute('row-pivots', '["timestamp"]');
+      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
       elem.setAttribute('aggregates', JSON.stringify({
         price_abc: 'avg',
         price_def: 'avg',
-        ratio: 'avg',
+        ratio:'avg',
         timestamp: 'distinct count',
         upper_bound: 'avg',
         lower_bound: 'avg',
@@ -55,11 +56,11 @@ class Graph extends Component<IProps, {}> {
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ]);
     }
   }
 }
 
-export default Graph;
+export default Graph;
\ No newline at end of file
-- 
2.26.2

